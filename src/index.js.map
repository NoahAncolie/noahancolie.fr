{"mappings":"ACAA;;;;;;;;;;;;;;;;;;OAkBO,CAKP,IAAM,8BAAA,GAAA,IAAA,KAAA,CAAA,aAAW,EAAI,AAAA;AACrB,8BAAA,CAAA,OAAA,CAAA,MAAA,CAAA,UAAS,EAAA,MAAS,CAAA,WAAO,CAAU,CAAE;AACrC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,8BAAA,CAAA,UAAA,CAAA,CAAA;AAG3B,IAAM,4BAAA,GAAA,IAAA,KAAA,CAAA,iBAAe,CAAA,EAAK,EAAC,MAAA,CAAA,UAAmB,GAA9C,MAAA,CAAA,WAAA,EAAA,CAAA,EAAA,GAAA,CAAA,AAAA;AAAgD,4BAAA,CAAA,QAAO,CAAA,GAAQ,CAAf,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,CAAA;AAAiB,4BAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAEjE,IAAA,2BAAA,GAAA,IAAA,KAAA,CAAA,KAAM,EAAG,AAAE;AAIX,IAAA,8BAAS,GAAA,IAAA,KAAA,CAAA,iBAAT,CAAA;IAAA,KAAA,EAAA,QAAA;CAAA,CAAA,AAAA;AAEI,IAAA,4BAAA,GAAA,EAAA,AAAA;AACA,4BAAA,CAAA,IAAA,CAAA,IAAA,KAAA,CAAA,OAAI,CAAC,GAAA,EAAA,CAAA,EAAS,CAAC,CAAA,CAAI,CAAA;AACtB,4BAAA,CAAA,IAAA,CAAA,IAAA,KAAA,CAAA,OAAA,CAAA,CAAA,EAAS,EAAA,EAAA,CAAA,CAAM,CAAE,CAAA;AACjB,4BAAA,CAAA,IAAA,CAAA,IAAA,KAAA,CAAA,OAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;AACD,4BAAA,CAAA,IAAA,CAAA,IAAA,KAAA,CAAA,OAAO,CAAG,EAAV,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;A,4B,C,I,C,I,K,C,O,C,C,E,G,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,G,E,C,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,G,E,C,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,C,E,C,E,E,C,C,C;A,4B,C,I,C,I,K,C,O,C,E,E,C,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,E,E,C,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,C,E,C,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,G,E,C,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,C,E,G,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,C,E,C,E,E,C,C,C;A,4B,C,I,C,I,K,C,O,C,C,E,E,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,C,E,G,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,C,E,C,E,C,C,C,C;A,4B,C,I,C,I,K,C,O,C,C,E,E,E,C,C,C,C;A,I,8B,G,I,K,C,c,E,C,a,C,4B,C,A;A,I,0B,G,I,K,C,I,C,8B,E,8B,C,A;A,2B,C,G,C,0B,C,C;A,S,6B,G;I,qB,C,6B,C,C;I,0B,C,Q,C,C,I,I,C;I,0B,C,Q,C,C,I,I,C;I,8B,C,M,C,2B,E,4B,C,C;C;A,8B,C,M,C,2B,E,4B,C,C;AAqCE,6BAAA,EAAA,CAAA","sources":["index.js","src/index.js"],"sourcesContent":["/*import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nconst camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );\ncamera.position.set( 0, 0, 100 );\ncamera.lookAt( 0, 0, 0 );\n\nconst scene = new THREE.Scene();\n\nconst loader = new GLTFLoader();\n\nloader.load( 'assets/images/Avocado.glb', function ( gltf ) {\n\n\tscene.add( gltf.scene );\n\n}, undefined, function ( error ) {\n\n\tconsole.error( error );\n\n} ); */ \n\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\nconst camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );\ncamera.position.set( 0, 0, 100 );\ncamera.lookAt( 0, 0, 0 );\n\nconst scene = new THREE.Scene();\n\nconst material = new THREE.LineBasicMaterial( { color: 0x0000ff } );\n\nconst points = [];\npoints.push( new THREE.Vector3( -10, 0, 0 ) );\npoints.push( new THREE.Vector3( 0, 15, 0) );\npoints.push( new THREE.Vector3( 10, 0, 0 ) );\npoints.push( new THREE.Vector3( 10, 0, 0 ) );\npoints.push( new THREE.Vector3( 0, -15, 0) );\npoints.push( new THREE.Vector3( -10, 0, 0 ) );\n\n\npoints.push( new THREE.Vector3( -10, 0, 0 ) );\npoints.push( new THREE.Vector3( 0, 0, -5) );\npoints.push( new THREE.Vector3( 10, 0, 0 ) );\npoints.push( new THREE.Vector3( 10, 0, 0 ) );\npoints.push( new THREE.Vector3( 0, 0, 5) );\npoints.push( new THREE.Vector3( -10, 0, 0 ) );\n\npoints.push( new THREE.Vector3( 0, -15, 0 ) );\npoints.push( new THREE.Vector3( 0, 0, -5) );\npoints.push( new THREE.Vector3( 0, 15, 0 ) );\npoints.push( new THREE.Vector3( 0, -15, 0 ) );\npoints.push( new THREE.Vector3( 0, 0, 5) );\npoints.push( new THREE.Vector3( 0, 15, 0 ) );\n\n\nconst geometry = new THREE.BufferGeometry().setFromPoints( points );\n\nconst line = new THREE.Line( geometry, material );\n\nscene.add( line );\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n    line.rotation.x += 0.01;\n    line.rotation.y += 0.01;\n\trenderer.render( scene, camera );\n}\n\nrenderer.render( scene, camera );\nanimate(); \n\n\n//# sourceMappingURL=index.js.map\n","/*import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nconst camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );\ncamera.position.set( 0, 0, 100 );\ncamera.lookAt( 0, 0, 0 );\n\nconst scene = new THREE.Scene();\n\nconst loader = new GLTFLoader();\n\nloader.load( 'assets/images/Avocado.glb', function ( gltf ) {\n\n\tscene.add( gltf.scene );\n\n}, undefined, function ( error ) {\n\n\tconsole.error( error );\n\n} ); */\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 0.1, 1000 );\n\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\nconst geometry = new THREE.BoxGeometry();\nconst material = new THREE.MeshBasicMaterial( { color: 0xf4f050 } );\nconst cube = new THREE.Mesh( geometry, material );\nscene.add( cube );\n\ncamera.position.z = 5;\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.01;\n\trenderer.render( scene, camera );\n}\nanimate(); \n\n\n/* const renderer = new THREE.WebGLRenderer();\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\nconst camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );\ncamera.position.set( 0, 0, 100 );\ncamera.lookAt( 0, 0, 0 );\n\nconst scene = new THREE.Scene();\n\nconst material = new THREE.LineBasicMaterial( { color: 0x0000ff } );\n\nconst points = [];\npoints.push( new THREE.Vector3( -10, 0, 0 ) );\npoints.push( new THREE.Vector3( 0, 10, 0) );\npoints.push( new THREE.Vector3( 10, 0, 0 ) );\n\nconst geometry = new THREE.BufferGeometry().setFromPoints( points );\n\nconst line = new THREE.Line( geometry, material );\n\nscene.add( line );\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n    //line.rotation.x += 0.01;\n    line.rotation.y += 0.01;\n\trenderer.render( scene, camera );\n}\n\nrenderer.render( scene, camera );\nanimate(); \n\nROTATING LINES\n*/\n"],"names":[],"version":3,"file":"index.js.map"}