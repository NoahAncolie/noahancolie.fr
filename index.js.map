{"mappings":"AAAA;;;;;;;;;;;;;;;;;;OAkBO,CAEP,IAAM,2BAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,AAAC;AAChC,IAAM,4BAAM,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAE,EAAE,EAAE,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,EAAE,IAAI,CAAE,AAAC;AAEpG,IAAM,8BAAQ,GAAG,IAAI,KAAK,CAAC,aAAa,EAAE,AAAC;AAC3C,8BAAQ,CAAC,OAAO,CAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAE,CAAC;AAC1D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAE,8BAAQ,CAAC,UAAU,CAAE,CAAC;AAEjD,IAAM,8BAAQ,GAAG,IAAI,KAAK,CAAC,WAAW,EAAE,AAAC;AACzC,IAAM,8BAAQ,GAAG,IAAI,KAAK,CAAC,iBAAiB,CAAE;IAAE,KAAK,EAAE,QAAQ;CAAE,CAAE,AAAC;AACpE,IAAM,0BAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAE,8BAAQ,EAAE,8BAAQ,CAAE,AAAC;AAClD,2BAAK,CAAC,GAAG,CAAE,0BAAI,CAAE,CAAC;AAElB,4BAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAEtB,SAAS,6BAAO,GAAG;IAClB,qBAAqB,CAAE,6BAAO,CAAE,CAAC;IAC9B,0BAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC;IACxB,0BAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC;IAC3B,8BAAQ,CAAC,MAAM,CAAE,2BAAK,EAAE,4BAAM,CAAE,CAAC;CACjC;AACD,6BAAO,EAAE,CAAC,CAGV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkCE","sources":["src/index.js"],"sourcesContent":["/*import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nconst camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );\ncamera.position.set( 0, 0, 100 );\ncamera.lookAt( 0, 0, 0 );\n\nconst scene = new THREE.Scene();\n\nconst loader = new GLTFLoader();\n\nloader.load( 'assets/images/Avocado.glb', function ( gltf ) {\n\n\tscene.add( gltf.scene );\n\n}, undefined, function ( error ) {\n\n\tconsole.error( error );\n\n} ); */\n\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 0.1, 1000 );\n\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\nconst geometry = new THREE.BoxGeometry();\nconst material = new THREE.MeshBasicMaterial( { color: 0xf4f050 } );\nconst cube = new THREE.Mesh( geometry, material );\nscene.add( cube );\n\ncamera.position.z = 5;\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.01;\n\trenderer.render( scene, camera );\n}\nanimate(); \n\n\n/* const renderer = new THREE.WebGLRenderer();\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\nconst camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 500 );\ncamera.position.set( 0, 0, 100 );\ncamera.lookAt( 0, 0, 0 );\n\nconst scene = new THREE.Scene();\n\nconst material = new THREE.LineBasicMaterial( { color: 0x0000ff } );\n\nconst points = [];\npoints.push( new THREE.Vector3( -10, 0, 0 ) );\npoints.push( new THREE.Vector3( 0, 10, 0) );\npoints.push( new THREE.Vector3( 10, 0, 0 ) );\n\nconst geometry = new THREE.BufferGeometry().setFromPoints( points );\n\nconst line = new THREE.Line( geometry, material );\n\nscene.add( line );\n\nfunction animate() {\n\trequestAnimationFrame( animate );\n    //line.rotation.x += 0.01;\n    line.rotation.y += 0.01;\n\trenderer.render( scene, camera );\n}\n\nrenderer.render( scene, camera );\nanimate(); \n\nROTATING LINES\n*/\n"],"names":[],"version":3,"file":"index.js.map"}